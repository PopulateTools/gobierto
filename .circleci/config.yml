---
defaults: &defaults
  working_directory: ~/gobierto
  docker:
    - image: circleci/ruby:2.7.1-node-browsers
      environment:
        RAILS_ENV: test
        PGHOST: localhost
        PGUSER: gobierto
        # Disable spring so bin/rails works. See: https://github.com/rails/spring/pull/546
        DISABLE_SPRING: true
    - image: postgres:12
      environment:
        POSTGRES_USER: gobierto
        POSTGRES_DB: gobierto_test
        POSTGRES_PASSWORD: gobierto
    - image: elasticsearch:2.4.1
    - image: redis:4.0.9

version: 2
jobs:
  bundle_dependencies:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - restore_cache:
          name: "[Bundler] Restore cache"
          keys:
            - gobierto-bundler-{{ checksum "Gemfile.lock" }}
      - run:
          name: "[Bundler] Install dependencies"
          command: bundle install --path vendor/bundle --jobs=4 --retry=3  --without development
      - save_cache:
          name: "[Bundler] Cache dependencies"
          key: gobierto-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          name: "[Yarn] Restore cache"
          keys:
            - gobierto-yarn-{{ checksum "yarn.lock" }}
      - run:
          name: "[Yarn] Install dependencies"
          command: yarn install
      - save_cache:
          name: "[Yarn] Cache dependencies"
          key: gobierto-yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Compile I18n JS file
      - run: bin/rails i18n:js:export

      # Precompile assets
      - restore_cache:
          name: "Restore cached assets"
          keys:
            - v3-asset-cache-{{ .Branch }}
            - v3-asset-cache-

      - run: bin/rails assets:precompile

      - save_cache:
          name: "Cache assets"
          key: v3-asset-cache-{{ .Branch }}
          paths:
            - public/assets
            - public/packs-test
            - tmp/cache

      - persist_to_workspace:
          root: ~/gobierto
          paths:
            - vendor/bundle
            - node_modules
            - public/assets
            - public/packs-test
            - tmp/cache

  tests_indicators:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_indicators*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_plans:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_plans*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_attachments:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_attachments*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_participation:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_participation*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_observatory:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_observatory*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_exports:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_exports*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_budget_consultations:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_budget_consultations*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_cms:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_cms*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_data:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_data*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_citizens_charters:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_citizens_charters*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_budgets:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_budgets*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_admin:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_admin*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_visualizations:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_visualizations*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_people:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -path '*gobierto_people*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  tests_others:
    <<: *defaults
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/gobierto
      - run: bundle --path vendor/bundle
      - run: yarn install
      # Wait for DB containers to be ready
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Install postgres 12
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
      - run: sudo apt update
      - run: sudo apt -y install postgresql-12 postgresql-client-12

      # Copy database config
      - run: cp config/database.yml.example config/database.yml

      # Setup the database
      - run: bin/rails db:create db:migrate

      # Install custom engines
      - run: script/custom_engines_ci_setup

      # Run tests
      - run:
          name: Run tests
          command: |
            FILES: $(find test vendor/gobierto_engines/ -not -path '*gobierto_*' -name '*_test.rb')
            TEST_FILES="$(circleci tests $FILES | circleci tests split --split-by=timings)"
            bin/rails gobierto_budgets:elastic_search_schemas:manage:reset
            bin/rails gobierto_budgets:elastic_search_schemas:manage:create
            bin/rails gobierto_budgets:fixtures:load
            echo '::BudgetsSeeder.seed!' | bin/rails c
            bin/rails test $TEST_FILES

  staging-deploy:
    working_directory: ~/gobierto
    machine:
      enabled: true
    steps:
      # deploy script is in the repository
      - checkout
      - run:
          name: Deploy staging branch
          command: script/staging_deploy.sh

  production-deploy:
    working_directory: ~/gobierto
    machine:
      enabled: true
    steps:
      # deploy script is in the repository
      - checkout
      - run:
          name: Deploy master branch
          command: script/production_deploy.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - bundle_dependencies
      - tests:
          requires:
            - bundle_dependencies
      - staging-deploy:
          requires:
            - bundle_dependencies
            - tests_indicators
            - tests_plans
            - tests_attachments
            - tests_participation
            - tests_observatory
            - tests_exports
            - tests_budget_consultations
            - tests_cms
            - tests_data
            - tests_citizens_charters
            - tests_budgets
            - tests_admin
            - tests_visualizations
            - tests_people
            - tests_others
          filters:
            branches:
              only: staging
      - production-deploy:
          requires:
            - bundle_dependencies
            - tests_indicators
            - tests_plans
            - tests_attachments
            - tests_participation
            - tests_observatory
            - tests_exports
            - tests_budget_consultations
            - tests_cms
            - tests_data
            - tests_citizens_charters
            - tests_budgets
            - tests_admin
            - tests_visualizations
            - tests_people
            - tests_others
          filters:
            branches:
              only: master
