@import "css-conf";
@import "mixins";
@import "comp-block-checkbox";

// Vars
$nodeLevel1IllustrationWidth: 33%;
$nodeLevel1Height: 150px;
$nodeLevel1HeightMobile: 20vh;

// styles only concern this module
.gobierto_planification {
  min-height: 300px;
  margin-bottom: 3rem;

  @include min-screen(768) {
    flex-direction: row;
    margin-bottom: 9rem;
  }

  .planification-header {
    margin: 1rem 0;
    display: flex;

    .header-resume {
      flex-basis: $nodeLevel1IllustrationWidth;

      h3 {
        margin-top: 0;
      }

      span {
        font-size: $f1;
      }
    }
  }

  .planification-content {
    display: flex;
    flex-direction: column;

    @include min-screen(768) {
      flex-direction: row;
    }

    // Sections
    > .level_0 {
      flex: 1 0 25%;
      counter-reset: section;

      @include screen(768) {
        max-height: 100vh;
      }

      &.is-active {
        .node-img {
          display: none;
        }

        .node-info {
          padding: 1em;

          @include min-screen(768) {
            padding: 1.5em;
          }

          .info-content {
            padding: 0;
          }

          h3,
          span {
            font-size: $f4;
          }
        }

        @include screen(768) {
          .node-root {
            transition: all 250ms;
            max-height: 100%;
          }

          &:not(.is-mobile-open) .node-root {
            min-height: auto;

            &:not(.is-root-open) {
              max-height: 0;
              min-height: 0;
              transition: all 250ms;

              * {
                visibility: hidden;
              }
            }
          }
        }
      }
    }

    @include screen(768) {
      section.level_1 {
        padding: 0 !important;

        .action-line--header {
          display: none;
        }
      }
    }

    > [class^="level_"]:not(.level_0) {
      flex: 0 0 75%;
      box-sizing: border-box;
      padding: 1em 0 0 0;

      @include min-screen(768) {
        padding: 2em 3em;
      }
    }

    .lines-header {
      display: flex;
      justify-content: space-between;
      margin: 0 0 20px;
      color: $color_text;
      font-size: $f7;
    }

    .lines-list {
      margin: 0;
      padding: 0;

      li {
        list-style: none;
      }
    }
  }

  .planification-buttons {
    display: flex;
    flex-wrap: wrap;
    margin: 2rem 0;

    &__button {
      border: 1px solid var(--color-base);
      box-sizing: border-box;
      border-radius: 3px;
      background: none;
      color: var(--color-base);
      text-transform: lowercase;
      font-weight: normal;
      padding: 0.5em 1em;
      margin: 0 5px 5px 0;
      text-align: left;
      transition: all 250ms;
      display: block;

      &::first-letter {
        text-transform: uppercase;
      }

      strong {
        text-transform: initial;
      }

      &.is-active,
      &:hover {
        background: var(--color-base);
        color: $color_main_negative;
      }
    }
  }

  // @component node-root (main axis)
  .node-root {
    position: relative;
    display: flex;
    min-height: $nodeLevel1HeightMobile;

    @include min-screen(768) {
      min-height: $nodeLevel1Height;
    }

    &:hover {
      opacity: 0.9;
    }

    a {
      display: flex;
      width: 100%;
      color: $color_main_negative;
      text-decoration: none;
      cursor: pointer;
      max-height: $nodeLevel1HeightMobile;

      @include min-screen(768) {
        max-height: $nodeLevel1Height;
      }
    }

    .node-img {
      max-height: $nodeLevel1Height;
      flex: 0 0 $nodeLevel1IllustrationWidth;
      mix-blend-mode: multiply;
      overflow: hidden;

      @include screen(768) {
        position: absolute;
        left: 0;
        right: 0;
        width: 100%;
        height: 100%;
        top: 0;
        bottom: 0;
      }

      img {
        object-fit: cover;
        min-width: 100%;
        width: 100%;
        height: 100%;
      }
    }

    .node-info {
      position: relative;
      flex: 1;
      transition: all 0.3s;

      .info-progress {
        top: 0;
        left: 0;
        position: absolute;
        height: 100%;
        z-index: 1;

        @include screen(768) {
          opacity: 0.5;
        }
      }

      .info-content {
        position: relative;
        z-index: 2;
        box-sizing: border-box;
        padding: 1em;
        color: $color_main_negative;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;

        @include min-screen(768) {
          padding: 2em;
        }

        h3 {
          color: $color_main_negative;
          margin: 0 0 0.25em 0;
          font-size: $f3;
        }

        h3.counter {
          &::before {
            counter-increment: section;
            content: counter(section) ". ";
          }
        }

        span {
          font-size: $f3;
          font-weight: 200;
        }
      }
    }
  }

  // @component node-list (action lines)
  .node-list {
    padding: 1em 0 0;
    border-top: 1px solid;
    display: flex;
    justify-content: flex-start;

    @include flexbox(1rem);

    > :not(:first-child) {
      flex: 1 0 auto;
      text-align: right;
    }

    .flex-basis-20 {
      flex-basis: 20%;
    }

    .flex-basis-10 {
      flex-basis: 10%;
    }

    .node-title {
      display: flex;
      flex-basis: 40%;

      @include min-screen(768) {
        flex-basis: 65%;
      }

      :first-child {
        flex: 0;
      }

      .cursor-pointer {
        cursor: pointer;
        padding-right: 0.25em;
      }
    }

    h3 {
      margin: 0 0 0.5em;
      cursor: default;

      a {
        display: block;
        text-decoration: none;
        cursor: pointer;

        &::first-letter {
          text-transform: uppercase;
        }

        &:hover {
          opacity: 0.75;
        }
      }
    }

    .fas {
      padding: 0.15em 0.45em;
      line-height: 1;

      @include border-radius(3px);
    }
  }

  .node-breadcrumb {
    display: inline-block;
    padding: 0 0.5rem;

    @include screen(768) {
      margin-left: 0 !important;

      &:first-child,
      &:first-child + br {
        display: none;
      }
    }

    @include border-radius(6px);

    .fas {
      padding: 0.15em 0.45em;
      line-height: 1;

      @include border-radius(3px);
    }

    a {
      font-size: $f7;
      font-weight: 700;
      padding: 0.25em;
      text-decoration: none;
      cursor: pointer;

      &:first-of-type {
        padding-left: 0;
      }

      &:last-of-type {
        padding-right: 0;
      }
    }
  }

  .node-action-line {
    background-color: $color_main_negative;

    @include screen(768) {
      margin-left: 0 !important;

      h3 {
        font-size: $f6;
      }
    }

    @include min-screen(768) {
      @include border-radius(6px);
    }

    .action-line--header {
      padding: 1em 1em 0.25em;
      border-top: 0;

      @include min-screen(768) {
        @include border-radius($top: 6px);
      }
    }

    .action-line--list {
      padding: 1em 0;
      margin: 0;
      color: $color_text;

      @include min-screen(768) {
        padding: 1em 2em;
        margin: auto;
      }

      @include border-radius($bottom: 6px);

      li {
        list-style: none;
      }

      .node-list {
        padding: 1em 0;
        border-color: rgba($color_text, 0.35);
      }

      a {
        color: $color_text;
        font-size: $f5;
        text-decoration: none;
        cursor: pointer;

        &::first-letter {
          text-transform: uppercase;
        }
      }

      table {
        margin: 0 0 1em;
        padding: 0;
        border-spacing: 0 0.5em;
        border-collapse: separate;

        @include min-screen(768) {
          padding: 0 0 0 1.5rem;
        }

        th:not(:first-child),
        td:not(:first-child) {
          text-align: center;
        }

        td {
          border-top: 0;

          &:first-child {
            width: 60%;
          }
        }

        thead {
          color: rgba($color_text, 0.35);
          text-transform: uppercase;
          padding: 0.25em 0;

          th {
            font-weight: normal;
            border-top: 1px solid rgba($color_text, 0.35);
            border-bottom: 1px solid rgba($color_text, 0.35);
          }
        }

        tbody {
          margin: 1em 0;

          tr {
            &:hover {
              cursor: pointer;

              td:first-child {
                @include border-radius($left: 6px);
              }

              td:last-child {
                @include border-radius($right: 6px);
              }
            }

            td {
              margin: 1em 0;
            }
          }
        }
      }
    }
  }

  .node-project-detail {
    padding: 1em;
    color: $color_text;

    @include min-screen(768) {
      padding: 2em;
    }

    > :not(:first-child):not([data-plugin]) {
      border-top: 1px solid $color_dark_sep;
    }
  }

  .project-mandatory {
    display: flex;
    font-size: 14px;
    line-height: 17px;
    min-height: 90px;

    > * {
      flex-basis: 50%;
    }

    .mandatory-progress {
      background-color: $separator;
      border-radius: 2px;
      width: 80%;
      height: 10px;
      margin-bottom: 12px;
      overflow: hidden;

      > div {
        height: 100%;
      }
    }

    .mandatory-list {
      display: flex;

      > :first-child {
        flex: 0 0 40%;
        padding-right: 0.25em;
      }
    }

    .mandatory-title {
      text-transform: uppercase;
      font-weight: 700;
      margin-bottom: 12px;
    }

    .mandatory-desc {
      color: $color_text;
      margin: 0 0 1em;

      &.mandatory-desc--large {
        font-size: $f2;
        opacity: 0.75;
      }
    }
  }

  .project-description {
    color: $color_text;
    padding: 0.75em 0;

    &:empty {
      display: none;
    }

    &__title {
      text-transform: uppercase;
      font-weight: 700;
      font-size: 14px;
    }

    &__more {
      display: block;
      border: 1px solid;
      border-radius: 4px;
      padding: 0.25em 1em;
      text-decoration: underline;
      font-weight: 700;
      text-align: center;
      cursor: pointer;
      text-transform: none;
      background: none;
      color: inherit;
      margin-bottom: 1em;
      margin-top: 0.5em;
    }

    &__content {
      max-height: 100vh;
      transition: all 250ms;

      > :first-child {
        margin-top: 0;
      }

      > :last-child {
        margin-bottom: 0;
      }

      &.is-hidden {
        max-height: 100px;
        position: relative;
        overflow: hidden;

        &::after {
          content: "";
          display: block;
          background: linear-gradient(
            to bottom,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 1) 100%
          );
          height: 50px;
          width: 100%;
          position: absolute;
          bottom: 0;
        }
      }
    }

    &__content,
    &__desc {
      font-size: 14px;
      word-break: break-word;
    }

    &__link {
      display: block;
    }

    &__images {
      display: flex;
      align-items: flex-start;
      flex-wrap: wrap;

      img {
        width: 50%;
        flex: 0 0 50%;
        object-fit: cover;
      }
    }

    &__list {
      display: flex;

      > :first-child {
        flex: 0 0 33%;
        padding-right: 0.25em;
      }
    }
  }

  .project-grid {
    display: block;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 10px 10px;

    @include min-screen(768) {
      display: grid;
    }
  }

  .planification-table {
    width: 100%;
    margin: 0;
    padding: 0;
    list-style-type: none;

    &__li:not(:last-child) {
      border-bottom: 1px solid $separator;
    }

    &__li--content {
      display: flex;
      flex: 1;
    }
    
    &__th {
      padding: 0 0.5rem 0.25rem 0;
      text-transform: uppercase;
      font-weight: bold;
      font-size: $f6;
      cursor: pointer;
      text-align: left;
      display: flex;
      align-items: baseline;
      justify-content: flex-start;
      flex-direction: row;
      flex: 1;

      .sort-icon {
        color: var(--color-base);
        margin-left: 0.5rem;
      }

      &:first-child {
        flex: 0 0 50%;
      }

      &:last-child {
        padding: 0 0 0.25rem;
        flex-direction: row-reverse;
        margin-left: auto;

        .sort-icon {
          margin-right: 0.5rem;
        }
      }
    }

    &__td {
      border: 0;
      font-size: $f5;
      padding: 0.5rem 0.5rem 0.5rem 0;

      i {
        color: var(--color-base);
      }

      &:first-child {
        flex: 0 0 50%;
      }

      &:last-child {
        margin-left: auto;
        padding: 0.5rem 0;
      }
    }

    &__td--alt {
      border: 0;
      font-size: $f7;
      padding: 0.5rem 0.5rem 0.5rem 0;
      font-weight: normal;
      flex: 1;

      &.is-selected {
        font-weight: 900;
      }

      &:first-child {
        flex: 0 0 50%;
      }

      &:last-child {
        text-align: right;
        padding: 0.5rem 0;
      }
    }

    &__td-name {
      text-decoration: underline;
      color: var(--color-base);
      cursor: pointer;
    }

    &__td-link {
      display: flex;
      align-items: baseline;
      color: var(--color-base);
      cursor: pointer;

      i {
        flex: 0 0 12px;
      }

      a {
        max-width: 80%;
      }
    }

    &__container {
      width: 100%;
    }

    &__wrapper {
      width: 100%;
      position: relative;

      > div {
        overflow-x: auto;
      }
    }

    &__header {
      display: flex;
      justify-content: space-between;
      margin: 0 0 2rem;
      align-items: center;
    }

    &__breadcrumb {
      display: flex;
      align-items: center;
      padding-right: 0.5rem;

      > :not(:last-child) {
        margin-right: 1rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 35vw;
      }

      &-group {
        text-transform: uppercase;
        font-size: $f6;
        font-weight: bold;
        cursor: pointer;
      }

      &-term {
        text-transform: uppercase;
        font-size: $f5;
        text-decoration: none;
        color: var(--color-base);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 40vw;
      }

      &-arrow {
        opacity: 0.5;
      }
    }

    &__column-selector {
      position: relative;
      color: var(--color-base);
      font-size: $f7;
      cursor: pointer;

      &__trigger {
        display: flex;
        align-items: baseline;

        span {
          text-decoration: underline;
          white-space: nowrap;
        }
      }

      &__icon {
        margin-left: 0.5rem;
      }

      &__content {
        position: absolute;
        right: 0;
        top: 100%;
        background-color: $color_main_negative;
        padding: 2em;
        box-sizing: border-box;
        width: 25vw;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);
        border-radius: 3px;
        z-index: 3;
      }
    }

    &--inner {
      margin-left: 1rem;
      width: calc(100% - 1rem);
    }
  }

  .planification-floating-project {
    padding: 0;
    position: absolute;
    top: 0;
    right: 0;
    box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.25);
    z-index: 1;
    border-radius: 6px;
    width: 100%;

    @include min-screen(768) {
      width: 50%;
    }

    &__times {
      position: relative;
      cursor: pointer;
    }
  }

  // Raw Indicators
  .tablerow {
    padding: 0.5em 0;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 3vmin;

    @media screen and (min-width: 768px) {
      grid-template-columns: repeat(auto-fit, minmax(25vw, 1fr));
    }

    &__item {
      background-color: rgba(#d8d8d8, 0.2);
      padding: 0.5em 1em;
      display: flex;

      &-title {
        flex: 0 1 50%;
        padding-right: 5px;
        font-size: 14px;
        font-weight: 600;
        line-height: 1.2;
      }

      &-table-container {
        flex: 0 0 50%;
        padding-left: 5px;
      }

      &-table {
        text-align: center;
        line-height: 18px;
        color: #4d4d4d;

        th:first-child:not(:last-child),
        td:first-child:not(:last-child) {
          text-align: left;
          padding-left: 0;
          color: rgba(#4d4d4d, 0.5);
          white-space: nowrap;
        }
      }

      &-table-header {
        font-weight: bold;
        color: rgba(#4d4d4d, 0.5);
        border-bottom: 2px solid rgba(#000, 0.2);

        > * {
          border-top: 0;
          font-size: 14px;
          font-weight: bold;
        }
      }

      &-table-row {
        > * {
          font-size: 14px;
          font-weight: normal;
        }

        &:not(:last-child) {
          border-bottom: 1px solid rgba(#000, 0.2);
        }
      }
    }
  }

  // ODS icons
  .ods-goal {
    background-size: cover;
    width: 80px;
    height: 80px;
    display: inline-block;

    &__container {
      display: flex;
      flex-wrap: wrap;
      margin: -5px;
    }
  
    &__content {
      padding: 5px;
      display: inline-flex;
    }

    // https://stackoverflow.com/questions/20120342/how-can-i-zerofill-the-index-of-a-sass-for-loop
    @function zerofill($i) {
      @return #{str-slice("00", 0, 2 - str-length(#{$i}))}#{$i};
    }
  
    @for $num from 1 through 17 {
      @each $lang in (ca es) {
        $num: zerofill($num);
        &__#{$num}__#{$lang} {
          background-image: url("../images/ods/ods_goal_"+$num+"_"+$lang+".png");
        }
      }
    }
  }
}
